<section class="entity-full-list">
    <?php
        $this->headLink()->appendStylesheet('/js/jquery-ui/jquery-ui.css');
        $this->headLink()->appendStylesheet('/js/datetimepicker/jquery.datetimepicker.css');
        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.blue.css');
        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.bootstrap.css');
//        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.jui.css');
//        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.ice.css');
//        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.dark.css');
//        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.default.css');
//        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.dropbox.css');
//        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.grey.css');
        $this->headLink()->appendStylesheet('/tablesorter-master/css/theme.metro-dark.css');
        $this->headLink()->appendStylesheet('/tablesorter-master/css/high-specificity/theme.blue.specific.css');
        $this->headScript()->appendFile('/js/jquery-ui/jquery-ui.js');          
        $this->headScript()->appendFile('/js/datetimepicker/build/jquery.datetimepicker.full.js');
        $this->headScript()->appendFile('/tablesorter-master/js/jquery.tablesorter.js');
        $this->headScript()->appendFile('/tablesorter-master/js/jquery.tablesorter.widgets.js');
        $this->headScript()->appendFile('/tablesorter-master/js/widgets/widget-scroller.js');
        
        $lines = $this->data;        
        if(isset($lines) && count($lines) > 0)
        {
            $keys = array_keys(array_values($lines)[0]);
        }
        
        $startDate = $this->startDate;
        $endDate = $this->endDate;
        $typeName = $this->typeName;
        $form = $this->form;                
        $form->setAttribute('action', $this->url('pms/entity', [
            'action' => 'fullList',
        ]));
    ?>
    <h3><?php echo isset($this->typeName) ? $this->typeName : "Room";?> Availability Status <?php 
        if(isset($startDate) && isset($endDate))
        {
            echo 'for period from '.date('d.m.Y.', strtotime($startDate)).' to '.date('d.m.Y.', strtotime($endDate));
        }
        ?></h3>
    <div id="upper">
        <div id="left">       
            <?php echo $this->form()->openTag($form);?>
            <?php echo $this->formLabel($form->get('entity_type_id'));?><?php echo $this->formElement($form->get('entity_type_id'))?>
            <?php echo $this->formLabel($form->get('date_from'));?><?php echo $this->formElement($form->get('date_from'))?>
            <!-- <?php echo $this->formLabel($form->get('sort'));?><?php echo $this->formElement($form->get('sort'))?>-->
            <br><br>
            <!-- <?php echo $this->formLabel($form->get('multi-checkbox'));?>-->
            <p>
            <?php echo $this->formElement($form->get('multi-checkbox'))?>
            <br>
            <?php echo $this->formElement($form->get('submit'));?>
            <?php echo $this->form()->closeTag();?>
        </div>
        <div id="right">            
        </div>
    </div>
    <div id="lower">
        <?php if(empty($keys)):?>
        <h3 class="error">No defined object types.</h3>
        <?php else: ?>
        <table class="tablesorter" id="myTable">
        <thead>
        <tr>
            <?php foreach($keys as $key):?>
            <th><?php echo $key?></th>
            <?php endforeach;?>
        </tr>
        </thead>
        <tbody>
        <?php foreach($lines as $line):?>
        <tr data-object-id="<?php echo $line['guid']?>">
            <?php 
                foreach($keys as $key)
                {
                    $content = $line[$key];
                    if(is_array($content))
                    {
                        $value = $content['status'];
                        $reservation_id = $content['id'];
                        if(isset($content['time_resolution']))
                        {
                            $time_resolution = $content['time_resolution'];
                        }                        
                    }
                    else 
                    {
                        $value = $content;
                    }

                    if($value == 'reserved')
                    {                        
                        if(isset($reservation_id))
                        {
                            echo '<td class="reserved" data-reservation-id="'.$reservation_id.'" data-reservation-contents="">'.$value.'</td>';
                        }
                        else 
                        {
                            echo '<td class="reserved" data-reservation-id="none">'.$value.'</td>';
                        }

                    }
                    else if ($value == 'free')
                    {
                        if(isset($time_resolution))
                        {
                            echo '<td class="free" data-reservation-date="'.$key.'" data-time-resolution="'.$time_resolution.'" title="this is free">'.$value.'</td>';
                        }
                        else 
                        {
                            echo '<td class="free" data-reservation-date="'.$key.'" title="this is free">'.$value.'</td>';
                        }

                    }
                    else 
                    {
                        echo '<td>'.$value.'</td>';
                    }
                }
            ?>
        </tr>
        <?php endforeach;?>
        </tbody>
        </table>  
        <?php endif;?>
    </div>
          
    <script>
        var lista = [];
        var rowId = -1;
        $(function() {                
            $.urlParam = function(name){
                var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
                if (results==null){
                   return null;
                }
                else{
                   return results[1] || 0;
                }
            }
            
            $.getReservations = function() {                
                $.ajax({
                    url: '/pms/ajax/getAvailability?type=22',
                    async: true
                }).done(function(data) {
                    var table = $(data).find('table');
                    $(table).attr('class', 'tablesorter');
                    $('div#right').html(table);
                    $('div#right').find('table').attr('class', 'tablesorter');
                    $('.tablesorter').tablesorter({
                            theme: 'metro-dark',
                            showProcessing: true,
                            headerTemplate : '{content} {icon}',
                            widgets: [ 'zebra', 'columns', 'stickyHeaders', 'scroller' ],
                            widgetOptions : {
                                    scroller_height : 200,
                                    // scroll tbody to top after sorting
                                    scroller_upAfterSort: true,
                                    // pop table header into view while scrolling up the page
                                    scroller_jumpToHeader: true,
                                    // In tablesorter v2.19.0 the scroll bar width is auto-detected
                                    // add a value here to override the auto-detected setting
                                    scroller_barWidth : null
                                    // scroll_idPrefix was removed in v2.18.0
                                    // scroller_idPrefix : 's_'
                            }
                    });
                }).fail(function(xhr) {
                    //alert('failed');
                });
            }
            
            $("#date_from").datetimepicker({
                format: 'Y-m-d H:i:s'
            });
            
            $('#myTable').tablesorter({               
                theme: 'metro-dark',
                showProcessing: true,
                headerTemplate : '{content} {icon}',
                widgets: [ 'zebra', 'columns', 'stickyHeaders', 'scroller' ],
                widgetOptions : {
                        scroller_height : 320,
                        // scroll tbody to top after sorting
                        scroller_upAfterSort: true,
                        // pop table header into view while scrolling up the page
                        scroller_jumpToHeader: true,
                        // In tablesorter v2.19.0 the scroll bar width is auto-detected
                        // add a value here to override the auto-detected setting
                        scroller_barWidth : null
                        // scroll_idPrefix was removed in v2.18.0
                        // scroller_idPrefix : 's_'
                }                   
            });
            
            $('td.reserved').tooltip({    
                items: '[data-reservation-contents]',
                show: {effect: "blind", duration:400},
                content: "loading...",
                create: function(evt, ui) {
                    var id = $(this).data().reservationId;            
                    $.get('/pms/ajax/reservationDetails?id='+id, function(data){
                        data = JSON.parse(data);
                        var html = "<table style='font-size:0.75em'>";
                        $.each(data, function(idx, val) {
                            html += "<tr><td style='font-weight: bold'>"+idx+":&nbsp;</td><td>"+val+"</td></tr>"
                        })
                        html += "</table>";
                        $(evt.target).tooltip('option', 'content', html);
                    });                                    
               }
            });
            
            $('td.reserved').on('mouseleave', function(evt) {
                setTimeout(function() {
                    $(evt.target).tooltip('close');
                });                
            });            
             
            $('td.reserved').on('dblclick', function(evt) {
                var id = $(evt.target).data().reservationId;     
                $.ajax({
                    url: '/pms/ajax/remember?mark=control',
                    async: false
                }).done(function(data) {
//                    alert(data);
                }).fail(function(xhr) {
                    //alert('failed');
                });
               window.location.href = "/pms/reservation/edit/"+id;
            });
            
            $('td.free').on('dblclick', function(evt) {
                var startDate = $(evt.target).data().reservationDate;
                var time = $(evt.target).data().timeResolution;
                var guid = $(evt.target).parent('tr').data().objectId;
                $.get('pms/ajax/remember?mark=control', function(data) {
                    alert(data);
                });
                //alert("Start date is " + startDate + ", room number is " + guid);
                window.location.href = "/pms/reservation/newEntity?guid="+guid+"&startDate="+startDate+"&time="+time;
            });
            
            $('#entity_type_id').on('change', function(evt) {
//                var start_date = $.urlParam('startDate');                
//                var start_time = $.urlParam('startTime');                
//                var entity_type_id = $(evt.target).val();
//                var params = "id="+entity_type_id;
//                params += "&startDate="+start_date;
//                if(start_time != null)
//                {
//                    params += "&startTime="+start_time;
//                }
//                window.location.href = '/pms/entity/fullList?' + params;                
            });
            
            $('#date_from').on('change', function(evt) {
//                var date = $(evt.target).val();
//                var timeline = date.split(' ');
//                var entity_type_id = $('#entity_type_id').val();
//                var params = "id="+entity_type_id;
//                params += "&startDate="+timeline[0];
//                if(timeline.length == 2)
//                {
//                    params += "&startTime="+timeline[1];
//                }
//                //alert(params);
//                window.location.href = '/pms/entity/fullList?' + params;            
                $(document).find('form#AvailabilityForm').submit();
            });            

            $('td.free').on('mouseenter', function(evt) {         
                evt.preventDefault();
                if(evt.type === 'mouseenter' && evt.which == 1 && evt.button == 0) {
                    var date = $(evt.target).data().reservationDate;
                    lista[lista.length] = date;
                    $(evt.target).css("color", "white");
                    $(evt.target).css("background", "#3056A0");
                }	
                
            });
            
            $('td.free').on("mousedown mouseup", function(e) {
                e.preventDefault();
                if(e.type == 'mousedown')
                {                 
                    var date = $(e.target).data().reservationDate;
                    rowId = $(e.target).parent('tr').data().objectId;
                    lista[lista.length] = date;
                    $(e.target).css("color", "white");
                    $(e.target).css("background", "#3056A0");
                }
                
                if(e.type == 'mouseup')
                {
                    $.each(lista, function(idx, value) {
                        $('td.free').parent('tr').filter('[data-object-id = "'+rowId+'"]').removeAttr('style');
                    });
                    
                    var first = lista[0];
                    var last = lista[lista.length - 1];
                    
                    var startDate = first;
                    var endDate = last;                    
                    var guid = rowId;
                    var time = $(e.target).data().timeResolution;
                    if(time == 1)
                    {
                        endDate += ' 12:00';
                    }
                    
                    rowId = -1;
                    lista = [];
                    
                    $.get('pms/ajax/remember?mark=control', function(data) {
                    });
                    //alert("Start date is " + startDate + ", room number is " + guid);
                    window.location.href = "/pms/reservation/newEntity?guid="+guid+"&startDate="+startDate+"&endDate="+endDate+"&time="+time;                    
                }
            });
            
            $.getReservations();
                        
        });
    </script>
    <style>
        table.tablesorter tbody td.reserved{
            background: #f44a6e;
            box-shadow: inset 1px 1px 3px #999;
        }
        table.tablesorter tbody td.free {
            background: #8eddca;
            box-shadow: inset 1px 1px 3px #999;
        }
        
        table.tablesorter td.selected {
            background: #ffff33;
            box-shadow: inset 1px 1px 3px #999;
        }
        
        .tooltip {
            font-size: 0.5em;
        }
        
        .form-entry {
            margin-left: 10px;
            margin-right: 10px;
            font-size: 0.75em;
        }
        div #upper {
            height: 200px;
            /*border: 2px solid #0000FF;*/
            display: block;
        }
        div #lower {
            height: 350px;
            display: block;
            overflow: hidden;
        }
        #left {
            height: 100%;
            width: 35%;
            border: 1px dashed #AAAAAA;
            border-radius: 15px;
            display: inline-block;
            vertical-align: top;
        }
        #right {
            height: 100%;
            width: 64.5%;
            /*border: 1px dashed #00FF00;*/
            display: inline-block;
            /*background: #ffff33;*/        
            vertical-align: top;
            overflow: hidden;
            
        }
        
        form {
            margin-top: 10px;
        }
        
        #submit {
            text-align: center;
            width: 20%;
            margin-left: 40%;
        }
        
        .today {
            color:red;
        }
        
        table.tablesorter td, table.tablesorter th {
            font-size: 0.75em;
        }
        
    </style>
</section>
